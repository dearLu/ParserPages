@model List<ParserPages.Models.StaticItem>
    

    @{
        ViewData["Title"] = "Результат парсинга сайта";
    }

<div class="container p-2" id="mainform">

    <h2 class="text-primary">Statics</h2>
        <br /><br />

        <button type="button" onclick="callServer()">Save</button>


        @if (Model.Count() > 0)
        {

            <br /><br />
            <table class="table table-bordered table-striped" style="width:100%">
                <thead>
                    <tr>

                        <th>Word</th>
                        <th>Frequency</th>
                    </tr>
                </thead>
                <tbody>
                    @for (int i = 0; i < Model.Count; i++)
                    {
                        <tr>
                            <td width="50%">
                                @Html.DisplayFor(m => Model[i].Word)

                                @Html.Hidden("StaticItem[" + i + "].Word", Model[i].Word)
                                

                            </td>
                            <td width="50%">
                                @Html.DisplayFor(m => Model[i].Frequency)

                                @Html.Hidden("StaticItem[" + i + "].Frequency", Model[i].Frequency)

                            </td>

                        </tr>
                    }
                </tbody>
            </table>

        }
        else
        {
            <p>No data</p>
        }


    @*}*@
</div>
<script type="text/javascript">
    async function callServer() {
   
        var items = @Json.Serialize(Model);
        const res = await fetch("/Home/GoToConfirm", {
            method: "POST",
            body: JSON.stringify(items),
            headers: {
                "Content-Type": "application/json",
                'Accept': 'application/json',
            }
        });

        const result = await res.json();
        
    };
</script>
   
